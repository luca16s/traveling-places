// <auto-generated />
using System;
using ISO.Travel.Api.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ISO.Travel.Api.Migrations
{
    [DbContext(typeof(TravelContext))]
    [Migration("20250607153608_UM")]
    partial class UM
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ISO.Travel.Api.Models.Local", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("LOCL_SQ_LOCAL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LOCL_NM_LOCAL");

                    b.Property<int>("TipoLocal")
                        .HasColumnType("int")
                        .HasColumnName("LOCL_IN_LOCAL");

                    b.HasKey("Id");

                    b.ToTable("LOCAL", (string)null);
                });

            modelBuilder.Entity("ISO.Travel.Api.Models.Viagem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("VIGM_SQ_VIAGEM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("VIGM_NM_DESTINO");

                    b.Property<DateOnly>("Fim")
                        .HasColumnType("date")
                        .HasColumnName("VIGM_DT_FIM");

                    b.Property<DateOnly>("Inicio")
                        .HasColumnType("date")
                        .HasColumnName("VIGM_DT_INICIO");

                    b.HasKey("Id");

                    b.ToTable("VIAGEM", (string)null);
                });

            modelBuilder.Entity("ISO.Travel.Api.Models.Local", b =>
                {
                    b.OwnsOne("ISO.Travel.Api.Models.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<long>("LocalId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("LOCL_TX_BAIRRO");

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("LOCL_NU_CEP");

                            b1.Property<string>("Complemento")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("LOCL_TX_LOGRADOURO");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("LOCL_NU_NUMERO");

                            b1.Property<string>("Referencia")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("LOCL_TX_REFERENCIA");

                            b1.HasKey("LocalId");

                            b1.ToTable("ENDERECO", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("LocalId");

                            b1.OwnsOne("ISO.Travel.Api.Models.Coordenada", "Coordenadas", b2 =>
                                {
                                    b2.Property<long>("EnderecoLocalId")
                                        .HasColumnType("bigint");

                                    b2.Property<long>("Latitude")
                                        .HasColumnType("bigint")
                                        .HasColumnName("CORD_NU_LATITUDE");

                                    b2.Property<long>("Longitude")
                                        .HasColumnType("bigint")
                                        .HasColumnName("CORD_NU_LONGITUDE");

                                    b2.HasKey("EnderecoLocalId");

                                    b2.ToTable("COORDENADA", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("EnderecoLocalId");
                                });

                            b1.OwnsOne("ISO.Travel.Api.Models.Pais", "Pais", b2 =>
                                {
                                    b2.Property<long>("EnderecoLocalId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("Nome")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("PAIS_NM_PAIS");

                                    b2.Property<string>("Sigla")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("PAIS_SG_PAIS");

                                    b2.HasKey("EnderecoLocalId");

                                    b2.ToTable("PAIS", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("EnderecoLocalId");

                                    b2.OwnsOne("ISO.Travel.Api.Models.Estado", "Estado", b3 =>
                                        {
                                            b3.Property<long>("PaisEnderecoLocalId")
                                                .HasColumnType("bigint");

                                            b3.Property<string>("Nome")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("nvarchar(100)")
                                                .HasColumnName("EST_NM_ESTADO");

                                            b3.Property<string>("Sigla")
                                                .IsRequired()
                                                .HasMaxLength(2)
                                                .HasColumnType("nvarchar(2)")
                                                .HasColumnName("EST_SG_ESTADO");

                                            b3.HasKey("PaisEnderecoLocalId");

                                            b3.ToTable("ESTADO", (string)null);

                                            b3.WithOwner()
                                                .HasForeignKey("PaisEnderecoLocalId");

                                            b3.OwnsOne("ISO.Travel.Api.Models.Cidade", "Cidade", b4 =>
                                                {
                                                    b4.Property<long>("EstadoPaisEnderecoLocalId")
                                                        .HasColumnType("bigint");

                                                    b4.Property<string>("Nome")
                                                        .IsRequired()
                                                        .HasMaxLength(100)
                                                        .HasColumnType("nvarchar(100)")
                                                        .HasColumnName("CIDE_NM_CIDADE");

                                                    b4.HasKey("EstadoPaisEnderecoLocalId");

                                                    b4.ToTable("CIDADE", (string)null);

                                                    b4.WithOwner()
                                                        .HasForeignKey("EstadoPaisEnderecoLocalId");
                                                });

                                            b3.Navigation("Cidade")
                                                .IsRequired();
                                        });

                                    b2.Navigation("Estado")
                                        .IsRequired();
                                });

                            b1.Navigation("Coordenadas")
                                .IsRequired();

                            b1.Navigation("Pais")
                                .IsRequired();
                        });

                    b.Navigation("Endereco")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
